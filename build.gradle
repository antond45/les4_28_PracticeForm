plugins {
    id 'java'
    id "io.qameta.allure" version "2.11.2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.27.0",
    selenideVersion = "7.2.3"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.19.1",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            'com.github.javafaker:javafaker:1.0.2',
            "io.qameta.allure:allure-selenide:$allureVersion",
            'org.slf4j:slf4j-simple:2.0.7'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("type") != null && !System.getProperty("type").isEmpty()) {
            includeTags (System.getProperty("type"))
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15
